name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  static-analysis:
    name: Static Analysis with Pylint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install virtualenv pylint
          virtualenv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run Pylint
        run: |
          find darf/ -type f -name "*.py" | xargs pylint --exit-zero | tee pylint.txt
          score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
          echo "Pylint score was $score"
          echo "Pylint score: $score" > pylint_score.md

      - name: Upload Pylint Score
        uses: actions/upload-artifact@v4
        with:
          name: pylint-score
          path: pylint_score.md

      - name: Update README with Pylint Score
        run: |
          score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
          sed -i "s|Pylint Score: .*|Pylint Score: $score|" README.md

      - name: Commit and Push Changes
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update Pylint score in README [skip ci]"
          git push

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pip install -e .

      - name: Build Sphinx Documentation
        run: |
          sphinx-apidoc -f -e -o docs/source darf/
          sphinx-build -b html docs/source public

      - name: Upload Documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: public

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: documentation
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4